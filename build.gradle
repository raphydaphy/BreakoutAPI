plugins {
	id "fabric-loom" version "0.8-SNAPSHOT"
	id "com.github.johnrengelman.shadow" version "7.0.0"
	id "maven-publish"
}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

repositories {
	mavenCentral()
	maven { url "https://oss.sonatype.org/content/repositories/releases/" }
	maven {url "https://raw.github.com/SpinyOwl/repo/releases"}
}

minecraft {
	accessWidener =  file("src/main/resources/breakoutapi.accesswidener")
}

dependencies {
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	// Fabric API. This is technically optional, but you probably want it anyway.
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

	implementation "org.liquidengine:cbchain:${project.cbchain_version}"
	implementation "org.joml:joml:${project.joml_version}"
	implementation "org.apache.commons:commons-collections4:${project.commons_collections_version}"

	implementation "org.lwjgl:lwjgl-nanovg:${project.lwjgl_version}"
	runtimeOnly "org.lwjgl:lwjgl-nanovg:${project.lwjgl_version}:natives-windows"
	runtimeOnly "org.lwjgl:lwjgl-nanovg:${project.lwjgl_version}:natives-linux"
	runtimeOnly "org.lwjgl:lwjgl-nanovg:${project.lwjgl_version}:natives-macos"

	implementation "org.lwjgl:lwjgl-yoga:${project.lwjgl_version}"
	runtimeOnly "org.lwjgl:lwjgl-yoga:${project.lwjgl_version}:natives-windows"
	runtimeOnly "org.lwjgl:lwjgl-yoga:${project.lwjgl_version}:natives-linux"
	runtimeOnly "org.lwjgl:lwjgl-yoga:${project.lwjgl_version}:natives-macos"
}

shadowJar {
	dependencies {
		include(dependency("org.liquidengine:cbchain:${project.cbchain_version}"))
		include(dependency("org.joml:joml:${project.joml_version}"))
		include(dependency("org.apache.commons:commons-collections4:${project.commons_collections_version}"))
	}
	relocate "org.joml", "com.raphydaphy.shaded.org.joml"
	relocate "org.apache.commons.collections4", "com.raphydaphy.shaded.org.apache.commons.collections4"
}

remapJar {
	dependsOn(shadowJar)
	input.set(shadowJar.archivePath)
}

tasks.build.dependsOn shadowJar

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	// ensure that the encoding is set to UTF-8, no matter what the system default is
	// this fixes some edge cases with special characters not displaying correctly
	// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
	// If Javadoc is generated, this must be specified in that task too.
	it.options.encoding = "UTF-8"

	// The Minecraft launcher currently installs Java 8 for users, so your mod probably wants to target Java 8 too
	// JDK 9 introduced a new way of specifying this that will make sure no newer classes or methods are used.
	// We'll use that if it's available, but otherwise we'll use the older option.
	def targetVersion = 8
	if (JavaVersion.current().isJava9Compatible()) {
		 it.options.release = targetVersion
	}
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.archivesBaseName}"}
	}
}

// configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			// add all the jars that should be included when publishing to maven
			artifact(remapJar) {
				builtBy remapJar
			}
			artifact(sourcesJar) {
				builtBy remapSourcesJar
			}
		}
	}
    
    // See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
    repositories {
		maven {
			name = "GitHubPackages"
			url = "https://maven.pkg.github.com/raphydaphy/breakoutapi"
			credentials {
				username = System.getenv("GITHUB_ACTOR")
				password = System.getenv("GITHUB_TOKEN")
			}
		}
    }
}
